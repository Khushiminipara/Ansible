---
- name: Install Wazuh Server
  hosts: servers
  become: yes

  environment:
    NODE_NAME: "wazuh-1"

  tasks:
    - name: Install the Wazuh manager package
      ansible.builtin.apt:
        name: wazuh-manager
        state: present

    - name: Enable and start the Wazuh manager service
      ansible.builtin.systemd:
        name: wazuh-manager
        daemon_reload: yes
        enabled: yes
        state: started

    - name: Install Filebeat
      ansible.builtin.apt:
        name: filebeat
        state: present

    - name: Download Filebeat configuration file
      ansible.builtin.get_url:
        url: "https://packages.wazuh.com/4.7/tpl/wazuh/filebeat/filebeat.yml"
        dest: "/etc/filebeat/filebeat.yml"
        mode: '0644'

    - name: Replace Filebeat configuration
      ansible.builtin.replace:
        path: /etc/filebeat/filebeat.yml
        regexp: 'hosts: \["127.0.0.1:9200"\]'
        replace: 'hosts: ["{{ node_ip }}:9200"]'

    - name: Create Filebeat keystore for credentials
      ansible.builtin.shell: "filebeat keystore create"

    - name: Add default username to Filebeat keystore
      ansible.builtin.shell: "echo admin | filebeat keystore add username --stdin --force"

    - name: Add default password to Filebeat keystore
      ansible.builtin.shell: "echo admin | filebeat keystore add password --stdin --force"

    - name: Download Wazuh alerts template
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/wazuh/wazuh/v4.7.3/extensions/elasticsearch/7.x/wazuh-template.json"
        dest: "/etc/filebeat/wazuh-template.json"
        mode: '0644'

    - name: Set permissions for Wazuh alerts template
      ansible.builtin.file:
        path: "/etc/filebeat/wazuh-template.json"
        mode: 'go+r'

    - name: Install Wazuh module for Filebeat
      ansible.builtin.shell: "curl -s https://packages.wazuh.com/4.x/filebeat/wazuh-filebeat-0.3.tar.gz | tar -xvz -C /usr/share/filebeat/module"

    - name: Create certs directory
      ansible.builtin.file:
        path: /etc/filebeat/certs
        state: directory
        mode: '0755'
      register: mkdir_result

    - name: Extract certificate files
      ansible.builtin.command:
        cmd: "tar -xf /home/{{ ansible_username }}/wazuh-certificates.tar -C /etc/filebeat/certs/ ./$NODE_NAME.pem ./$NODE_NAME-key.pem ./root-ca.pem"
      when: mkdir_result is succeeded

    - name: Rename PEM file
      ansible.builtin.command:
        cmd: "mv -n /etc/filebeat/certs/$NODE_NAME.pem /etc/filebeat/certs/filebeat.pem"
      when: mkdir_result is succeeded

    - name: Rename KEY file
      ansible.builtin.command:
        cmd: "mv -n /etc/filebeat/certs/$NODE_NAME-key.pem /etc/filebeat/certs/filebeat-key.pem"
      when: mkdir_result is succeeded

    - name: Change permissions of certs directory
      ansible.builtin.file:
        path: /etc/filebeat/certs
        mode: '0500'
      when: mkdir_result is succeeded

    - name: Change permissions of PEM file
      ansible.builtin.command:
        cmd: "chmod 400 /etc/filebeat/certs/filebeat.pem"
      when: mkdir_result is succeeded

    - name: Change permissions of KEY file
      ansible.builtin.command:
        cmd: "chmod 400 /etc/filebeat/certs/filebeat-key.pem"
      when: mkdir_result is succeeded

    - name: Change permissions of ROOT file
      ansible.builtin.command:
        cmd: "chmod 400 /etc/filebeat/certs/root-ca.pem"
      when: mkdir_result is succeeded

    - name: Change owner of certs directory
      ansible.builtin.command:
        cmd: "chown -R root:root /etc/filebeat/certs"
      when: mkdir_result is succeeded

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable Filebeat service
      ansible.builtin.service:
        name: filebeat
        enabled: yes

    - name: Start Filebeat service
      ansible.builtin.service:
        name: filebeat
        state: started